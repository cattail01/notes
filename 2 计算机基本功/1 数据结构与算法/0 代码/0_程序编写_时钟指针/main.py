# coding=utf-8

pre_hour_angle = 360 / 12
pre_minute_angle = 360 / 60

time = list(map(int, input().split(":")))
angle = (time[0] * pre_hour_angle + pre_hour_angle / 60 * time[1]) - time[1] * pre_minute_angle
angle = abs(angle) 
if angle > 180:
    angle = abs(360 - angle)
print("{:.3f}".format(angle))
"""
【问题描述】普通时钟都有时针和分针，在任意时刻时针和分针都有一个夹角，并且假设时针和分针都是连续移动的。

                    现已知当前的时刻，试求出该时刻时针和分针的夹角A（0-180度之间）。
                    注意：当分针处于0分和59分之间时，时针相对于该小时的起始位置也有一个偏移角度。
【输入形式】从标准输入读取一行，是一个24小时制的时间。格式是以冒号（23:59）分隔的两个整数m（0<=m<=23）和n（0<=n<=59），其中m是小时，n是分钟。
【输出形式】向标准输出打印结果。输出一个浮点数A，是时针和分针夹角的角度值。该浮点数保留3位小数值。
【输入样例】
8:10
【输出样例】
175.000
【样例说明】8:10那个时刻时针与秒针的夹角是175.000度
编程提示：

（1）时针把钟表圆形分隔为12份，每份为360/12=30度。

（2）分针把面板分隔为60份，每份360/60=6度。

（3）时针随分针的运动，把一个小时的各又分解为60份，每份对应分针运行的值。

（4）夹角有两种情况，分针在前或时针在前，但是夹角的范围一定在0-180度之间。
"""